<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class ManageRelatedAgencies_model extends CI_Model
{
    #เรียกตารางจากฐานข้อมูล

    private $tbl = 'manage_related_agencies';

    ##Pagination
    private $per_page = 10;

    ## Search
    private $s_element = array('stext' => FALSE, 'status' => 'all');

    ## Match data
    private $status = array('1' => 'เผยแพร่', '2' => 'ไม่เผยแพร่');

    public function __construct()
    {
        parent::__construct();
        // $this->user_id = $this->session->user_central['id'];
        $this->user_id = $this->session->cmu_web_session['id'];
        
        $this->path = './file_upload/manage_related_agencies/';
        $this->path_upload = 'file_upload/manage_related_agencies/';

        if (!file_exists($this->path)) {
            $oldmask = umask(0);
            mkdir($this->path, 0777);
            umask($oldmask);
        }
    }

    public function getTableList($page)
    {
        $this->fnc_setElementSearchFromSession();
        $this->db->order_by('s_order', 'asc');
        $this->db->order_by('time_create', 'desc');
        $data = $this->db->get($this->tbl)->result_array();
        if (!empty($data)) {
            foreach ($data as $key => $value) {
                if (file_exists($this->path . $value['image']) && !empty($value['image'])) {
                    $value['image'] = "<img src='" . APP_HOST_ADDRESS . $value['img_path'] . '/' . $value['image'] . "' class='img_list'>";
                } else {
                    $value['image'] = "- ไม่พบไฟล์ภาพ -";
                }
                $value['title'] = !empty($value['title']) ? $value['title'] : '-';
                $value['show_status'] = !empty($value['show_status']) ? $value['show_status'] : '-';
                $get_data[] = $value;
            }
            return $get_data;
        }
        return false;

    }

    public function getListCount()
    {
        $this->fnc_setElementSearchFromSession();
        $data = $this->db->get($this->tbl)->result_array();
        $count = !empty($data) ? count($data) : 0;

        return $count;
    }

    public function getForm()
    {
        $reset = array(
            'id' => "",
            'title' => "",
            'title_en' => "",
            'url' => "",
            'image' => "",
            'img_path' => "",
            'show_status' => "",
            'time_create' => "",
            's_order' => ""
        );
        return $reset;
    }

    public function getSelectData($id)
    {
        $this->db->where('id', $id);
        $data = $this->db->get($this->tbl)->row_array();

        if (!empty($data)) {
            $img = $data['image'];
            $path_img = $data['img_path'];
            if (file_exists($this->path . $img) && !empty($img)) {
                $data['image'] = APP_HOST_ADDRESS . $path_img . $img;
            } else {
                $data['image'] = "";
            }
            return $data;
        }
        return false;

    }

    public function selectNeweOrder()
    {
        $this->db->order_by('s_order', 'desc');
        // $this->db->limit(1, 0);
        $this->db->select('s_order');
        $last_no = $this->db->get($this->tbl)->row_array();
        // var_dump($last_no);
        return ($last_no['s_order'] + 1);
    }

    public function getInsert()
    {
        // $last_no = $this->selectNeweOrder();
        $time_create = date('Y-m-d h:i:s');
        $data = array(
            'title' => $this->input->post('title'),
            'title_en' => $this->input->post('title_en'),
            'url' => $this->input->post('url'),
            'show_status' => $this->input->post('show_status'),
            'time_create' => $time_create,
            's_order' => 0
        );
        if ($_FILES['image']['name'] != '') {
            $alert = $this->fnc_upImg($_FILES['image']);

            $info = pathinfo($_FILES['image']['name']);
            $type_img = $info['extension'];
            $name_img = md5(date('Y-m-dh:i:s')) . '.' . $type_img;
            if ($alert != '') {
                return $alert;
            }
            $data['image'] = $name_img;
            $data['img_path'] = $this->path_upload;
        } else {
            return "กรุณาเลือกรูปภาพ";
        }

        $this->db->insert($this->tbl, $data);

        $id = $this->db->insert_id();
        $Counter = new Counter;
        $Counter->logAction($data['title'], $id, 0, 'agencies', '76', $this->user_id);
    }

    public function getEdit($id)
    {

        $time_create = date('Y-m-d h:i:s');
        $data = array(
            'title' => $this->input->post('title'),
            'title_en' => $this->input->post('title_en'),
            'url' => $this->input->post('url'),
            'show_status' => $this->input->post('show_status'),
            // 'time_create' => $time_create,
        );
        $img = $this->fnc_selectImg($id);
        if ($_FILES['image']['name'] != '') {
            $alert = $this->fnc_upImg($_FILES['image']);

            $info = pathinfo($_FILES['image']['name']);
            $type_img = $info['extension'];
            $name_img = md5(date('Y-m-dh:i:s')) . '.' . $type_img;
            if ($alert != '') {
                return $alert;
            }
            if (file_exists($this->path . $img)) {
                unlink($this->path . $img);
            }
            $data['image'] = $name_img;
            $data['img_path'] = $this->path_upload;
        } elseif ($_FILES['image']['name'] == '' && !file_exists($this->path . $img)) {
            return "กรุณาเลือกรูปภาพ";
        }

        $dataByID = $this->getSelectData($id);
        if(!empty($dataByID)) {
            $Counter = new Counter;
            $Counter->logAction($dataByID['title'], $id, 0, 'agencies', '77', $this->user_id);
        }

        $this->db->where('id', $id);
        $this->db->update($this->tbl, $data);
    }

    private function fnc_selectImg($id)
    {
        $this->db->select('image');
        $this->db->where('id', $id);
        $data = $this->db->get($this->tbl)->row_array();
        if (!empty($data)) {
            return $data['image'];
        }
        return false;
    }

    private function fnc_upImg($img)
    {
        $alert = "";
        $info = pathinfo($img['name']);
        $type_img = $info['extension'];
        $type_img = strtolower($type_img);

        $name_img = md5(date('Y-m-dh:i:s')) . '.' . $type_img;

        if ($type_img == 'jpg' || $type_img == 'jpeg' || $type_img == 'png' || $type_img == 'gif') {

            move_uploaded_file($img['tmp_name'], $this->path . $name_img);
        } else {
            return $alert = "ไฟล์ที่อัพโหลดไม่ได้อยู่ในรูปแบบนามสกุลที่กำหนด";
        }
    }

    public function getdelete($id)
    {
        $dataByID = $this->getSelectData($id);
        if(!empty($dataByID)) {
            $Counter = new Counter;
            $Counter->logAction($dataByID['title'], $id, 0, 'agencies', '78', $this->user_id);
        }
        $img = $this->fnc_selectImg($id);
        if (file_exists($this->path . $img)) {
            unlink($this->path . $img);
        }
        $this->db->where('id', $id);
        $this->db->delete($this->tbl);
    }

//     ## Search

    private function fnc_setElementSearchFromSession()
    {
        $form_search_element = $this->session->userdata('form_search_element');


        if ($form_search_element == null) {
            return;
        }
        foreach ($this->s_element as $key => $value) {
            if (isset($form_search_element['element'][$key]))
                $this->s_element[$key] = $form_search_element['element'][$key];
        }

        $stext = trim($this->db->escape_str($this->s_element['stext']));
        $status = $this->s_element['status'];

        if ($stext != '') {
            $this->db->where("(title LIKE '%{$stext}%')");
        }

        if ($status != 'all') {
            $this->db->where('show_status', $status);
        }
    }

    public function getSElement()
    {
        return $this->s_element;
    }

    public function saveOrder($id, $order)
    {
        $data = array(
            's_order' => $order
        );

        $this->db->where('id', $id);
        $this->db->update($this->tbl, $data);


        return 'เรียงลำดับข้อมูลแล้ว';
    }


//     ##Pagination

//     public function getPerPage()
//     {
//         return $this->per_page;
//     }

//     private function fnc_calPageOffset($page)
//     {
//         $offset = ($page * $this->per_page) - $this->per_page;

//         $this->db->limit($this->per_page, $offset);
//     }


}

/* End of file New_model.php */
/* Location: ./application/models/New_model.php */